name: autobuild

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows 64-bit MinGW-w64 (make)", artifact: "win64-MinGW.tar.bz2",
            os: windows-latest,
            cc: "x86_64-w64-mingw32-gcc.exe", cxx: "x86_64-w64-mingw32-g++.exe",
            configure_method: "", build_method: "make",
            msys_msystem: "MINGW64", msys_prefix: "mingw-w64-x86_64-"
          }
        - {
            name: "Windows 32-bit MinGW-w64 (make)", artifact: "win64-MinGW.tar.bz2",
            os: windows-latest,
            cc: "i686-w64-mingw32-gcc.exe", cxx: "i686-w64-mingw32-g++.exe",
            configure_method: "", build_method: "make",
            msys_msystem: "MINGW32", msys_prefix: "mingw-w64-i686-"
          }
        - {
            name: "Ubuntu GCC (make)", artifact: "linux.tar.bz2",
            os: ubuntu-latest,
            cc: "gcc", cxx: "g++",
            configure_method: "", build_method: "make"
          }
        - {
            name: "Ubuntu Clang (make)", artifact: "linux.tar.bz2",
            os: ubuntu-latest,
            cc: "clang", cxx: "clang++",
            configure_method: "", build_method: "make"
          }
        - {
            name: "macOS Clang (make)", artifact: "macos.tar.bz2",
            os: macos-latest,
            cc: "clang", cxx: "clang++",
            configure_method: "", build_method: "make"
          }
    steps:
    - uses: actions/checkout@v1
    - if: matrix.config.os == 'windows-latest'
      name: Install prerequisites (Windows)
      uses: msys2/setup-msys2@v2
      with:
        release: false
        update: false
        msystem: ${{ matrix.config.msys_msystem }}
        install: >-
          ${{ matrix.config.msys_prefix }}argtable
    - if: matrix.config.os == 'ubuntu-latest'
      name: Install prerequisites (Linux)
      run: |
         sudo apt-get install libargtable2-dev
    - if: matrix.config.os == 'macos-latest'
      name: Install prerequisites (macOS)
      run: |
         brew install argtable
    - if: matrix.config.cc == 'x86_64-w64-mingw32-gcc.exe'
      name: Add mingw32 to path (Windows 64-bit)
      shell: bash
      run: |
         echo 'C:\msys64\mingw64\bin' >> $GITHUB_PATH
    - if: matrix.config.cc == 'i686-w64-mingw32-gcc.exe'
      name: Add mingw32 to path (Windows 32-bit)
      shell: bash
      run: |
         echo 'C:\msys64\mingw32\bin' >> $GITHUB_PATH
    - if: matrix.config.build_method == 'make'
      name: Build (make)
      run: |
        make CC=${{ matrix.config.cc }} DOXYGEN=
